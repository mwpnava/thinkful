SQL self-sufficiency exam--1SELECT *FROM information_schema.COLUMNSWHERE  TABLE_NAME = 'naep'--2SELECT * FROM naepLIMIT 50--3SELECT 	state,	COUNT(avg_math_4_score) AS count, 	ROUND(AVG(avg_math_4_score),3) AS average, 	MIN(avg_math_4_score) AS minimun, 	MAX(avg_math_4_score) AS maximunFROM naepGROUP BY stateORDER BY state ASC--4SELECT	state,	COUNT(avg_math_4_score) AS count, 	ROUND(AVG(avg_math_4_score),3) AS average, 	MIN(avg_math_4_score) AS minimum, 	MAX(avg_math_4_score) AS maximumFROM naepGROUP BY stateHAVING (MAX(avg_math_4_score) - MIN(avg_math_4_score)) > 30ORDER BY state ASC--5SELECT state AS bottom_10_statesFROM naepWHERE	year = 2000 AND 	avg_math_4_score IS NOT nullORDER BY avg_math_4_score ASCLIMIT 10--6SELECT state, ROUND(AVG(avg_math_4_score),2) AS averageFROM naepWHERE year = 2000GROUP BY stateORDER BY state ASC--7SELECT state AS below_average_states_y2000FROM naepWHERE	year = 2000 AND	avg_math_4_score < (SELECT AVG(avg_math_4_score) 						  FROM naep 						  where year=2000)--8SELECT state AS scores_missing_y2000FROM naepWHERE 	year = 2000 AND	avg_math_4_score IS null	-- 9SELECT 	A.state,	ROUND(A.avg_math_4_score,2) AS avg_math_4_score,	B.total_expenditureFROM	naep AS ALEFT OUTER JOIN finance AS BON A.id = B.idWHERE 	A.year = 2000 AND	A.avg_math_4_score IS NOT nullORDER BY B.total_expenditure DESC